# Generated from c2llvm.g4 by ANTLR 4.9
from antlr4 import *
from io import StringIO
from typing.io import TextIO
import sys



def serializedATN():
    with StringIO() as buf:
        buf.write("\3\u608b\ua72a\u8133\ub9ed\u417c\u3be7\u7786\u5964\2-")
        buf.write("\u012f\b\1\4\2\t\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7")
        buf.write("\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4\13\t\13\4\f\t\f\4\r\t\r")
        buf.write("\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22\t\22\4\23")
        buf.write("\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30")
        buf.write("\4\31\t\31\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36")
        buf.write("\t\36\4\37\t\37\4 \t \4!\t!\4\"\t\"\4#\t#\4$\t$\4%\t%")
        buf.write("\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\4+\t+\4,\t,\3\2\3\2\3")
        buf.write("\2\3\2\3\2\3\2\3\2\3\2\3\2\3\3\3\3\3\4\3\4\3\5\3\5\3\6")
        buf.write("\3\6\3\7\3\7\3\7\3\b\3\b\3\t\3\t\3\n\3\n\3\13\3\13\3\f")
        buf.write("\3\f\3\f\3\f\3\f\3\r\3\r\3\r\3\r\3\r\3\r\3\16\3\16\3\16")
        buf.write("\3\16\3\17\3\17\3\20\3\20\3\20\3\20\3\20\3\20\3\20\3\21")
        buf.write("\3\21\3\21\3\21\3\21\3\21\3\22\3\22\3\22\3\22\3\22\3\22")
        buf.write("\3\22\3\22\3\22\3\23\3\23\3\24\3\24\3\25\3\25\3\26\3\26")
        buf.write("\3\27\3\27\3\30\3\30\3\31\3\31\3\31\3\32\3\32\3\32\3\33")
        buf.write("\3\33\3\33\3\34\3\34\3\34\3\35\3\35\3\35\3\36\3\36\3\36")
        buf.write("\3\37\3\37\3\37\3\37\3 \3 \3 \3 \3 \3 \3 \3!\3!\3!\3!")
        buf.write("\3!\3\"\3\"\7\"\u00cd\n\"\f\"\16\"\u00d0\13\"\3#\6#\u00d3")
        buf.write("\n#\r#\16#\u00d4\3#\3#\6#\u00d9\n#\r#\16#\u00da\3$\3$")
        buf.write("\3$\3$\3%\3%\7%\u00e3\n%\f%\16%\u00e6\13%\3%\3%\3&\6&")
        buf.write("\u00eb\n&\r&\16&\u00ec\3\'\6\'\u00f0\n\'\r\'\16\'\u00f1")
        buf.write("\3\'\3\'\5\'\u00f6\n\'\3(\3(\3(\3(\5(\u00fc\n(\3)\3)\3")
        buf.write(")\3)\3)\3)\3)\3)\3)\3)\3)\5)\u0109\n)\3*\3*\3*\3*\7*\u010f")
        buf.write("\n*\f*\16*\u0112\13*\3*\5*\u0115\n*\3*\3*\3*\3*\3+\3+")
        buf.write("\3+\3+\7+\u011f\n+\f+\16+\u0122\13+\3+\3+\3+\3+\3+\3,")
        buf.write("\6,\u012a\n,\r,\16,\u012b\3,\3,\5\u00e4\u0110\u0120\2")
        buf.write("-\3\3\5\4\7\5\t\6\13\7\r\b\17\t\21\n\23\13\25\f\27\r\31")
        buf.write("\16\33\17\35\20\37\21!\22#\23%\24\'\25)\26+\27-\30/\31")
        buf.write("\61\32\63\33\65\34\67\359\36;\37= ?!A\"C#E$G%I&K\'M(O")
        buf.write(")Q*S+U,W-\3\2\b\5\2C\\aac|\6\2\62;C\\aac|\3\2\62;\4\2")
        buf.write("C\\c|\6\2##,-//\61\61\5\2\13\f\17\17\"\"\2\u0140\2\3\3")
        buf.write("\2\2\2\2\5\3\2\2\2\2\7\3\2\2\2\2\t\3\2\2\2\2\13\3\2\2")
        buf.write("\2\2\r\3\2\2\2\2\17\3\2\2\2\2\21\3\2\2\2\2\23\3\2\2\2")
        buf.write("\2\25\3\2\2\2\2\27\3\2\2\2\2\31\3\2\2\2\2\33\3\2\2\2\2")
        buf.write("\35\3\2\2\2\2\37\3\2\2\2\2!\3\2\2\2\2#\3\2\2\2\2%\3\2")
        buf.write("\2\2\2\'\3\2\2\2\2)\3\2\2\2\2+\3\2\2\2\2-\3\2\2\2\2/\3")
        buf.write("\2\2\2\2\61\3\2\2\2\2\63\3\2\2\2\2\65\3\2\2\2\2\67\3\2")
        buf.write("\2\2\29\3\2\2\2\2;\3\2\2\2\2=\3\2\2\2\2?\3\2\2\2\2A\3")
        buf.write("\2\2\2\2C\3\2\2\2\2E\3\2\2\2\2G\3\2\2\2\2I\3\2\2\2\2K")
        buf.write("\3\2\2\2\2M\3\2\2\2\2O\3\2\2\2\2Q\3\2\2\2\2S\3\2\2\2\2")
        buf.write("U\3\2\2\2\2W\3\2\2\2\3Y\3\2\2\2\5b\3\2\2\2\7d\3\2\2\2")
        buf.write("\tf\3\2\2\2\13h\3\2\2\2\rj\3\2\2\2\17m\3\2\2\2\21o\3\2")
        buf.write("\2\2\23q\3\2\2\2\25s\3\2\2\2\27u\3\2\2\2\31z\3\2\2\2\33")
        buf.write("\u0080\3\2\2\2\35\u0084\3\2\2\2\37\u0086\3\2\2\2!\u008d")
        buf.write("\3\2\2\2#\u0093\3\2\2\2%\u009c\3\2\2\2\'\u009e\3\2\2\2")
        buf.write(")\u00a0\3\2\2\2+\u00a2\3\2\2\2-\u00a4\3\2\2\2/\u00a6\3")
        buf.write("\2\2\2\61\u00a8\3\2\2\2\63\u00ab\3\2\2\2\65\u00ae\3\2")
        buf.write("\2\2\67\u00b1\3\2\2\29\u00b4\3\2\2\2;\u00b7\3\2\2\2=\u00ba")
        buf.write("\3\2\2\2?\u00be\3\2\2\2A\u00c5\3\2\2\2C\u00ca\3\2\2\2")
        buf.write("E\u00d2\3\2\2\2G\u00dc\3\2\2\2I\u00e0\3\2\2\2K\u00ea\3")
        buf.write("\2\2\2M\u00ef\3\2\2\2O\u00fb\3\2\2\2Q\u0108\3\2\2\2S\u010a")
        buf.write("\3\2\2\2U\u011a\3\2\2\2W\u0129\3\2\2\2YZ\7%\2\2Z[\7k\2")
        buf.write("\2[\\\7p\2\2\\]\7e\2\2]^\7n\2\2^_\7w\2\2_`\7f\2\2`a\7")
        buf.write("g\2\2a\4\3\2\2\2bc\7>\2\2c\6\3\2\2\2de\7@\2\2e\b\3\2\2")
        buf.write("\2fg\7?\2\2g\n\3\2\2\2hi\7=\2\2i\f\3\2\2\2jk\7k\2\2kl")
        buf.write("\7h\2\2l\16\3\2\2\2mn\7*\2\2n\20\3\2\2\2op\7+\2\2p\22")
        buf.write("\3\2\2\2qr\7}\2\2r\24\3\2\2\2st\7\177\2\2t\26\3\2\2\2")
        buf.write("uv\7g\2\2vw\7n\2\2wx\7u\2\2xy\7g\2\2y\30\3\2\2\2z{\7y")
        buf.write("\2\2{|\7j\2\2|}\7k\2\2}~\7n\2\2~\177\7g\2\2\177\32\3\2")
        buf.write("\2\2\u0080\u0081\7h\2\2\u0081\u0082\7q\2\2\u0082\u0083")
        buf.write("\7t\2\2\u0083\34\3\2\2\2\u0084\u0085\7.\2\2\u0085\36\3")
        buf.write("\2\2\2\u0086\u0087\7t\2\2\u0087\u0088\7g\2\2\u0088\u0089")
        buf.write("\7v\2\2\u0089\u008a\7w\2\2\u008a\u008b\7t\2\2\u008b\u008c")
        buf.write("\7p\2\2\u008c \3\2\2\2\u008d\u008e\7d\2\2\u008e\u008f")
        buf.write("\7t\2\2\u008f\u0090\7g\2\2\u0090\u0091\7c\2\2\u0091\u0092")
        buf.write("\7m\2\2\u0092\"\3\2\2\2\u0093\u0094\7e\2\2\u0094\u0095")
        buf.write("\7q\2\2\u0095\u0096\7p\2\2\u0096\u0097\7v\2\2\u0097\u0098")
        buf.write("\7k\2\2\u0098\u0099\7p\2\2\u0099\u009a\7w\2\2\u009a\u009b")
        buf.write("\7g\2\2\u009b$\3\2\2\2\u009c\u009d\7#\2\2\u009d&\3\2\2")
        buf.write("\2\u009e\u009f\7,\2\2\u009f(\3\2\2\2\u00a0\u00a1\7\61")
        buf.write("\2\2\u00a1*\3\2\2\2\u00a2\u00a3\7\'\2\2\u00a3,\3\2\2\2")
        buf.write("\u00a4\u00a5\7-\2\2\u00a5.\3\2\2\2\u00a6\u00a7\7/\2\2")
        buf.write("\u00a7\60\3\2\2\2\u00a8\u00a9\7?\2\2\u00a9\u00aa\7?\2")
        buf.write("\2\u00aa\62\3\2\2\2\u00ab\u00ac\7#\2\2\u00ac\u00ad\7?")
        buf.write("\2\2\u00ad\64\3\2\2\2\u00ae\u00af\7@\2\2\u00af\u00b0\7")
        buf.write("?\2\2\u00b0\66\3\2\2\2\u00b1\u00b2\7>\2\2\u00b2\u00b3")
        buf.write("\7?\2\2\u00b38\3\2\2\2\u00b4\u00b5\7(\2\2\u00b5\u00b6")
        buf.write("\7(\2\2\u00b6:\3\2\2\2\u00b7\u00b8\7~\2\2\u00b8\u00b9")
        buf.write("\7~\2\2\u00b9<\3\2\2\2\u00ba\u00bb\7k\2\2\u00bb\u00bc")
        buf.write("\7p\2\2\u00bc\u00bd\7v\2\2\u00bd>\3\2\2\2\u00be\u00bf")
        buf.write("\7f\2\2\u00bf\u00c0\7q\2\2\u00c0\u00c1\7w\2\2\u00c1\u00c2")
        buf.write("\7d\2\2\u00c2\u00c3\7n\2\2\u00c3\u00c4\7g\2\2\u00c4@\3")
        buf.write("\2\2\2\u00c5\u00c6\7e\2\2\u00c6\u00c7\7j\2\2\u00c7\u00c8")
        buf.write("\7c\2\2\u00c8\u00c9\7t\2\2\u00c9B\3\2\2\2\u00ca\u00ce")
        buf.write("\t\2\2\2\u00cb\u00cd\t\3\2\2\u00cc\u00cb\3\2\2\2\u00cd")
        buf.write("\u00d0\3\2\2\2\u00ce\u00cc\3\2\2\2\u00ce\u00cf\3\2\2\2")
        buf.write("\u00cfD\3\2\2\2\u00d0\u00ce\3\2\2\2\u00d1\u00d3\t\4\2")
        buf.write("\2\u00d2\u00d1\3\2\2\2\u00d3\u00d4\3\2\2\2\u00d4\u00d2")
        buf.write("\3\2\2\2\u00d4\u00d5\3\2\2\2\u00d5\u00d6\3\2\2\2\u00d6")
        buf.write("\u00d8\7\60\2\2\u00d7\u00d9\t\4\2\2\u00d8\u00d7\3\2\2")
        buf.write("\2\u00d9\u00da\3\2\2\2\u00da\u00d8\3\2\2\2\u00da\u00db")
        buf.write("\3\2\2\2\u00dbF\3\2\2\2\u00dc\u00dd\7)\2\2\u00dd\u00de")
        buf.write("\13\2\2\2\u00de\u00df\7)\2\2\u00dfH\3\2\2\2\u00e0\u00e4")
        buf.write("\7$\2\2\u00e1\u00e3\13\2\2\2\u00e2\u00e1\3\2\2\2\u00e3")
        buf.write("\u00e6\3\2\2\2\u00e4\u00e5\3\2\2\2\u00e4\u00e2\3\2\2\2")
        buf.write("\u00e5\u00e7\3\2\2\2\u00e6\u00e4\3\2\2\2\u00e7\u00e8\7")
        buf.write("$\2\2\u00e8J\3\2\2\2\u00e9\u00eb\t\4\2\2\u00ea\u00e9\3")
        buf.write("\2\2\2\u00eb\u00ec\3\2\2\2\u00ec\u00ea\3\2\2\2\u00ec\u00ed")
        buf.write("\3\2\2\2\u00edL\3\2\2\2\u00ee\u00f0\t\5\2\2\u00ef\u00ee")
        buf.write("\3\2\2\2\u00f0\u00f1\3\2\2\2\u00f1\u00ef\3\2\2\2\u00f1")
        buf.write("\u00f2\3\2\2\2\u00f2\u00f5\3\2\2\2\u00f3\u00f4\7\60\2")
        buf.write("\2\u00f4\u00f6\7j\2\2\u00f5\u00f3\3\2\2\2\u00f5\u00f6")
        buf.write("\3\2\2\2\u00f6N\3\2\2\2\u00f7\u00f8\7(\2\2\u00f8\u00fc")
        buf.write("\7(\2\2\u00f9\u00fa\7~\2\2\u00fa\u00fc\7~\2\2\u00fb\u00f7")
        buf.write("\3\2\2\2\u00fb\u00f9\3\2\2\2\u00fcP\3\2\2\2\u00fd\u0109")
        buf.write("\t\6\2\2\u00fe\u00ff\7?\2\2\u00ff\u0109\7?\2\2\u0100\u0101")
        buf.write("\7#\2\2\u0101\u0109\7?\2\2\u0102\u0109\7>\2\2\u0103\u0104")
        buf.write("\7>\2\2\u0104\u0109\7?\2\2\u0105\u0109\7@\2\2\u0106\u0107")
        buf.write("\7@\2\2\u0107\u0109\7?\2\2\u0108\u00fd\3\2\2\2\u0108\u00fe")
        buf.write("\3\2\2\2\u0108\u0100\3\2\2\2\u0108\u0102\3\2\2\2\u0108")
        buf.write("\u0103\3\2\2\2\u0108\u0105\3\2\2\2\u0108\u0106\3\2\2\2")
        buf.write("\u0109R\3\2\2\2\u010a\u010b\7\61\2\2\u010b\u010c\7\61")
        buf.write("\2\2\u010c\u0110\3\2\2\2\u010d\u010f\13\2\2\2\u010e\u010d")
        buf.write("\3\2\2\2\u010f\u0112\3\2\2\2\u0110\u0111\3\2\2\2\u0110")
        buf.write("\u010e\3\2\2\2\u0111\u0114\3\2\2\2\u0112\u0110\3\2\2\2")
        buf.write("\u0113\u0115\7\17\2\2\u0114\u0113\3\2\2\2\u0114\u0115")
        buf.write("\3\2\2\2\u0115\u0116\3\2\2\2\u0116\u0117\7\f\2\2\u0117")
        buf.write("\u0118\3\2\2\2\u0118\u0119\b*\2\2\u0119T\3\2\2\2\u011a")
        buf.write("\u011b\7\61\2\2\u011b\u011c\7,\2\2\u011c\u0120\3\2\2\2")
        buf.write("\u011d\u011f\13\2\2\2\u011e\u011d\3\2\2\2\u011f\u0122")
        buf.write("\3\2\2\2\u0120\u0121\3\2\2\2\u0120\u011e\3\2\2\2\u0121")
        buf.write("\u0123\3\2\2\2\u0122\u0120\3\2\2\2\u0123\u0124\7,\2\2")
        buf.write("\u0124\u0125\7\61\2\2\u0125\u0126\3\2\2\2\u0126\u0127")
        buf.write("\b+\2\2\u0127V\3\2\2\2\u0128\u012a\t\7\2\2\u0129\u0128")
        buf.write("\3\2\2\2\u012a\u012b\3\2\2\2\u012b\u0129\3\2\2\2\u012b")
        buf.write("\u012c\3\2\2\2\u012c\u012d\3\2\2\2\u012d\u012e\b,\2\2")
        buf.write("\u012eX\3\2\2\2\20\2\u00ce\u00d4\u00da\u00e4\u00ec\u00f1")
        buf.write("\u00f5\u00fb\u0108\u0110\u0114\u0120\u012b\3\b\2\2")
        return buf.getvalue()


class c2llvmLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    T__0 = 1
    T__1 = 2
    T__2 = 3
    T__3 = 4
    T__4 = 5
    T__5 = 6
    T__6 = 7
    T__7 = 8
    T__8 = 9
    T__9 = 10
    T__10 = 11
    T__11 = 12
    T__12 = 13
    T__13 = 14
    T__14 = 15
    T__15 = 16
    T__16 = 17
    T__17 = 18
    T__18 = 19
    T__19 = 20
    T__20 = 21
    T__21 = 22
    T__22 = 23
    T__23 = 24
    T__24 = 25
    T__25 = 26
    T__26 = 27
    T__27 = 28
    T__28 = 29
    T__29 = 30
    T__30 = 31
    T__31 = 32
    ID = 33
    DOUBLE = 34
    CHAR = 35
    STRING = 36
    INT = 37
    LIB = 38
    Conjunction = 39
    Operator = 40
    LineComment = 41
    BlockComment = 42
    WS = 43

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'#include'", "'<'", "'>'", "'='", "';'", "'if'", "'('", "')'", 
            "'{'", "'}'", "'else'", "'while'", "'for'", "','", "'return'", 
            "'break'", "'continue'", "'!'", "'*'", "'/'", "'%'", "'+'", 
            "'-'", "'=='", "'!='", "'>='", "'<='", "'&&'", "'||'", "'int'", 
            "'double'", "'char'" ]

    symbolicNames = [ "<INVALID>",
            "ID", "DOUBLE", "CHAR", "STRING", "INT", "LIB", "Conjunction", 
            "Operator", "LineComment", "BlockComment", "WS" ]

    ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", 
                  "T__7", "T__8", "T__9", "T__10", "T__11", "T__12", "T__13", 
                  "T__14", "T__15", "T__16", "T__17", "T__18", "T__19", 
                  "T__20", "T__21", "T__22", "T__23", "T__24", "T__25", 
                  "T__26", "T__27", "T__28", "T__29", "T__30", "T__31", 
                  "ID", "DOUBLE", "CHAR", "STRING", "INT", "LIB", "Conjunction", 
                  "Operator", "LineComment", "BlockComment", "WS" ]

    grammarFileName = "c2llvm.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.9")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


